{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport FinalistsComponent from './FinalistsComponent';\nimport { ReactComponent as MSHFWhiteLogo } from './sports_hall_logo_white.svg';\nconst YearWinnerPage = () => {\n  _s();\n  const {\n    awardId,\n    yearId\n  } = useParams();\n  const [yearData, setYearData] = useState();\n  const [awardData, setAwardData] = useState();\n  const [winner, setWinner] = useState();\n  const [showFinalists, setShowFinalists] = useState(false);\n  const navigate = useNavigate();\n  const [athletesForAward, setAthletesForAward] = useState();\n  const [schools, setSchools] = useState();\n  const [school, setSchool] = useState();\n  useEffect(() => {\n    fetch(`http://localhost:1337/api/years/${yearId}?populate=*`).then(res => res.json()).then(data => {\n      console.log(data);\n      setYearData(data);\n      const specificAward = data.data.attributes.awards.data.find(award => award.id === parseInt(awardId));\n      console.log(specificAward);\n      setAwardData(specificAward);\n      const athletesForAward = data.data.attributes.athletes.data.filter(athlete => athlete.attributes.finalist === true && athlete.attributes.sport === specificAward.attributes.sport);\n      console.log(athletesForAward);\n      setAthletesForAward(athletesForAward);\n      const winnerForAward = data.data.attributes.athletes.data.filter(athlete => athlete.attributes.finalist === false && athlete.attributes.sport === specificAward.attributes.sport);\n      console.log(winnerForAward[0]);\n      setWinner(winnerForAward[0]);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }, [awardId, yearId]);\n  useEffect(() => {\n    fetch(`http://localhost:1337/api/schools?populate=*`).then(res => res.json()).then(schools => {\n      var _schools$data, _schools$data$data;\n      setSchools(schools);\n      const athleteSchool = schools === null || schools === void 0 ? void 0 : (_schools$data = schools.data) === null || _schools$data === void 0 ? void 0 : (_schools$data$data = _schools$data.data) === null || _schools$data$data === void 0 ? void 0 : _schools$data$data.find(school => school.attributes.athletes.data.some(athlete => athlete.id === winner.id));\n      setSchool(athleteSchool);\n      console.log(schools);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }, []);\n\n  // return (\n  //   <div className=\"container-fluid bg-dark full-bg\" style={{ backgroundImage: `url(${winner?.attributes.imageLink})`, backgroundSize: 'cover' }}>\n  //     <MSHFWhiteLogo className=\"img-fluid position-absolute top-0 end-0 whiteLogo\" />\n  //     <div className=\"row justify-content-between\">\n  //       <div className=\"col-md-4\">\n  //         <div className=\"card text-white yearWinnerBanner\">\n  //           <div className=\"card-body\">\n  //             <h1 className=\"yearBanner\">{awardData?.attributes.name}</h1>\n  //             <img src={awardData?.attributes?.sponsorLogoLink} alt=\"sponsor-logo\" className=\"my-4 img-fluid\" />\n  //             <p className=\"card-text\">WINNER {yearData?.data.attributes.awardYear}</p>\n  //             <img className='text-uppercase bannerIcon' src={awardData?.attributes?.iconLink} alt=\"icon\"/>\n\n  //           </div>\n  //         </div>\n  //       </div>\n  //     </div>\n\n  //     <div className=\"row \">\n  //     <div>\n  //       <img src={winner?.attributes.schoolLogoLink} alt=\"school-logo\" className=\"my-4\" />\n  //       </div>\n  //       <div className=\"col-md-4 text-white text-uppercase\">\n  //         {winner &&\n  //           <div>\n  //             <h3 className=\"yearText\">{winner.attributes.firstName} {winner.attributes.lastName}</h3>\n  //             <p className=\"yearSubText\">{winner.attributes.positionFullName}</p>\n  //             <button\n  //               className=\"btn w-100 mb-2 btnStyle profileButton\"\n  //               onClick={() => navigate(`/profile/${winner.id}`)}\n  //             >\n  //               Profile\n  //             </button>\n  //             <button className=\"btn w-100 mb-2 btnStyle yearBtn\" onClick={() => setShowFinalists(true)}>Finalists</button>\n  //         <button className=\"btn w-100 mb-2 btnStyle yearBtn\" onClick={() => navigate('/awards')}>Menu</button>\n  //           </div>\n  //         }\n  //       </div>\n  //     </div>\n\n  //     {/* Render the FinalistsComponent */}\n  //     {showFinalists && <FinalistsComponent finalists={athletesForAward} awardId={awardId} yearId={yearId} onClose={() => setShowFinalists(false)} />}\n  //   </div>\n  // );\n  retur;\n};\n_s(YearWinnerPage, \"DvzZCYvcmWYETokSzmW+jvFkXME=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = YearWinnerPage;\nexport default YearWinnerPage;\nvar _c;\n$RefreshReg$(_c, \"YearWinnerPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","FinalistsComponent","ReactComponent","MSHFWhiteLogo","YearWinnerPage","_s","awardId","yearId","yearData","setYearData","awardData","setAwardData","winner","setWinner","showFinalists","setShowFinalists","navigate","athletesForAward","setAthletesForAward","schools","setSchools","school","setSchool","fetch","then","res","json","data","console","log","specificAward","attributes","awards","find","award","id","parseInt","athletes","filter","athlete","finalist","sport","winnerForAward","catch","error","_schools$data","_schools$data$data","athleteSchool","some","retur","_c","$RefreshReg$"],"sources":["C:/Users/liquiddev/Desktop/Trent/mshf-app/frontend/src/pages/yearWinner/YearWinnerPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport FinalistsComponent from './FinalistsComponent';\r\n\r\nimport { ReactComponent as MSHFWhiteLogo } from './sports_hall_logo_white.svg';\r\n\r\nconst YearWinnerPage = () => {\r\n  const { awardId, yearId } = useParams();\r\n  const [yearData, setYearData] = useState();\r\n  \r\n  const [awardData, setAwardData] = useState();\r\n  const [winner, setWinner] = useState();\r\n  const [showFinalists, setShowFinalists] = useState(false);\r\n  const navigate = useNavigate();\r\n  const [athletesForAward, setAthletesForAward] = useState();\r\n  const [schools, setSchools] = useState();\r\n  const [school, setSchool] = useState();\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:1337/api/years/${yearId}?populate=*`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setYearData(data);\r\n        const specificAward = data.data.attributes.awards.data.find(\r\n          award => award.id === parseInt(awardId)\r\n        );\r\n        console.log(specificAward);\r\n        setAwardData(specificAward);\r\n        const athletesForAward = data.data.attributes.athletes.data.filter(\r\n          athlete => athlete.attributes.finalist === true && athlete.attributes.sport === specificAward.attributes.sport\r\n        );\r\n        console.log(athletesForAward);\r\n        setAthletesForAward(athletesForAward);\r\n        const winnerForAward = data.data.attributes.athletes.data.filter(\r\n          athlete => athlete.attributes.finalist === false && athlete.attributes.sport === specificAward.attributes.sport\r\n        );\r\n        console.log(winnerForAward[0]);\r\n\r\n        setWinner(winnerForAward[0]);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  }, [awardId, yearId]);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:1337/api/schools?populate=*`)\r\n      .then((res) => res.json())\r\n      .then((schools) => {\r\n        setSchools(schools);\r\n        const athleteSchool = schools?.data?.data?.find(school => \r\n    school.attributes.athletes.data.some(athlete => athlete.id === winner.id)\r\n  );\r\n  setSchool(athleteSchool);\r\n  console.log(schools);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  }, [])\r\n  \r\n\r\n\r\n  // return (\r\n  //   <div className=\"container-fluid bg-dark full-bg\" style={{ backgroundImage: `url(${winner?.attributes.imageLink})`, backgroundSize: 'cover' }}>\r\n  //     <MSHFWhiteLogo className=\"img-fluid position-absolute top-0 end-0 whiteLogo\" />\r\n  //     <div className=\"row justify-content-between\">\r\n  //       <div className=\"col-md-4\">\r\n  //         <div className=\"card text-white yearWinnerBanner\">\r\n  //           <div className=\"card-body\">\r\n  //             <h1 className=\"yearBanner\">{awardData?.attributes.name}</h1>\r\n  //             <img src={awardData?.attributes?.sponsorLogoLink} alt=\"sponsor-logo\" className=\"my-4 img-fluid\" />\r\n  //             <p className=\"card-text\">WINNER {yearData?.data.attributes.awardYear}</p>\r\n  //             <img className='text-uppercase bannerIcon' src={awardData?.attributes?.iconLink} alt=\"icon\"/>\r\n\r\n  //           </div>\r\n  //         </div>\r\n  //       </div>\r\n  //     </div>\r\n\r\n  //     <div className=\"row \">\r\n  //     <div>\r\n  //       <img src={winner?.attributes.schoolLogoLink} alt=\"school-logo\" className=\"my-4\" />\r\n  //       </div>\r\n  //       <div className=\"col-md-4 text-white text-uppercase\">\r\n  //         {winner &&\r\n  //           <div>\r\n  //             <h3 className=\"yearText\">{winner.attributes.firstName} {winner.attributes.lastName}</h3>\r\n  //             <p className=\"yearSubText\">{winner.attributes.positionFullName}</p>\r\n  //             <button\r\n  //               className=\"btn w-100 mb-2 btnStyle profileButton\"\r\n  //               onClick={() => navigate(`/profile/${winner.id}`)}\r\n  //             >\r\n  //               Profile\r\n  //             </button>\r\n  //             <button className=\"btn w-100 mb-2 btnStyle yearBtn\" onClick={() => setShowFinalists(true)}>Finalists</button>\r\n  //         <button className=\"btn w-100 mb-2 btnStyle yearBtn\" onClick={() => navigate('/awards')}>Menu</button>\r\n  //           </div>\r\n  //         }\r\n  //       </div>\r\n  //     </div>\r\n\r\n  //     {/* Render the FinalistsComponent */}\r\n  //     {showFinalists && <FinalistsComponent finalists={athletesForAward} awardId={awardId} yearId={yearId} onClose={() => setShowFinalists(false)} />}\r\n  //   </div>\r\n  // );\r\n  retur\r\n};\r\n\r\nexport default YearWinnerPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}